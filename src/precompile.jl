function _precompile_()
    ccall(:jl_generating_output, Cint, ()) == 1 || return nothing
    # precompile(Tuple{PaddedMatrices.var"##s115#407",Any,Any,Any})
    # precompile(Tuple{PaddedMatrices.var"##s115#309",Any,Any,Any,Any,Any,Any,Any,Any})
    # precompile(Tuple{PaddedMatrices.var"##s84#204",Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any})
    precompile(Tuple{typeof(copyto!),FixedSizeArray{Tuple{200,12},Float64,2,Tuple{1,200},2400},Array{Float64,2}})
    precompile(Tuple{typeof(Base._unsafe_setindex!),IndexLinear,Array{Float64,3},DynamicPaddedArray{Float64,3},UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}})
    precompile(Tuple{typeof(Base.__cat),Array{Float64,3},Tuple{Int64,Int64,Int64},Tuple{Bool,Bool,Bool},DynamicPaddedArray{Float64,3},Vararg{Any,N} where N})
    precompile(Tuple{Base.var"#cat##kw",NamedTuple{(:dims,),Tuple{Int64}},typeof(cat),DynamicPaddedArray{Float64,3},Vararg{Any,N} where N})
    precompile(Tuple{Type{FixedSizeArray{Tuple{200,12},Float64,N,X,L} where L where X where N},UndefInitializer})
    precompile(Tuple{typeof(Base._unsafe_setindex!),IndexLinear,Array{Float64,3},DynamicPaddedArray{Float64,2},UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}})
    precompile(Tuple{typeof(copyto!),FixedSizeArray{Tuple{200,8},Float64,2,Tuple{1,200},1600},Array{Float64,2}})
    precompile(Tuple{typeof(PaddedMatrices.mulquote),Int64,Int64,Int64,Int64,Int64,Type{Float64},Symbol,Nothing,Int64})
    precompile(Tuple{typeof(PaddedMatrices.K_unknown_At_mul_X_quote),Type,Type,Int64,Int64,Type,Int64,Bool,Symbol,Symbol,Symbol,Bool})
    # precompile(Tuple{PaddedMatrices.var"##s16#54",Any,Any,Any,Any,Any,Any,Any,Any,Any,Any})
    precompile(Tuple{typeof(PaddedMatrices.pick_kernel_size),Type{Float64},Int64,Int64})
    # precompile(Tuple{PaddedMatrices.var"#mul_tn_quote##kw",NamedTuple{(:negative, :force_inline),Tuple{Bool,Bool}},typeof(PaddedMatrices.mul_tn_quote),Int64,Int64,Int64,Type,Bool,Int64,Int64,Int64})
    # precompile(Tuple{PaddedMatrices.var"#mul_tn_quote##kw",NamedTuple{(:negative, :force_inline),Tuple{Bool,Bool}},typeof(PaddedMatrices.mul_tn_quote),Int64,Symbol,Int64,Type,Bool,Symbol,Symbol,Int64})
    # precompile(Tuple{PaddedMatrices.var"##s82#174",Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any})
    # precompile(Tuple{PaddedMatrices.var"##s115#382",Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any})
    precompile(Tuple{typeof(copyto!),FixedSizeArray{Tuple{200,7},Float64,2,Tuple{1,200},1400},Array{Float64,2}})
    precompile(Tuple{typeof(PaddedMatrices.rand_mutable_fixed_size_expr),Int64,Type,Int64,Symbol,Int64})
    precompile(Tuple{typeof(PaddedMatrices.rand_mutable_fixed_size_expr),Int64,Type,Int64,Symbol,Int64,Int64,Symbol,Vararg{Symbol,N} where N})
    precompile(Tuple{typeof(PaddedMatrices.mulinit),PaddedMatrices.DynamicKernel,UInt8,Bool,Bool})
    # precompile(Tuple{PaddedMatrices.var"##s115#386",Any,Any,Any,Any,Any,Any,Any,Any,Any,Any})
    precompile(Tuple{typeof(PaddedMatrices.generalized_getindex_quote),Core.SimpleVector,Core.SimpleVector,Type,Any,Bool,Bool})
    # precompile(Tuple{PaddedMatrices.var"##s115#415",Any,Any,Any,Any,Any,Any,Any,Any})
end
