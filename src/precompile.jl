function _precompile_()
    ccall(:jl_generating_output, Cint, ()) == 1 || return nothing
    precompile(Tuple{Core.kwftype(typeof(Base.cat)),NamedTuple{(:dims,),Tuple{Int64}},typeof(cat),DynamicPaddedArray{Float64,3},Vararg{Any,N} where N})
    precompile(Tuple{Core.kwftype(typeof(Base.cat_t)),NamedTuple{(:dims,),Tuple{Int64}},typeof(Base.cat_t),Type{Float64},DynamicPaddedArray{Float64,3},Vararg{Any,N} where N})
    precompile(Tuple{Core.kwftype(typeof(PaddedMatrices.mul_tn_quote)),NamedTuple{(:negative, :force_inline),Tuple{Bool,Bool}},typeof(PaddedMatrices.mul_tn_quote),Int64,Int64,Int64,Type{Float64},Bool,Int64,Int64,Int64})
    precompile(Tuple{Core.kwftype(typeof(PaddedMatrices.mul_tn_quote)),NamedTuple{(:negative, :force_inline),Tuple{Bool,Bool}},typeof(PaddedMatrices.mul_tn_quote),Int64,Symbol,Int64,Type{Float64},Bool,Symbol,Symbol,Int64})
    precompile(Tuple{Type{FixedSizeArray{Tuple{200,12},Float64,N,X,L} where L where X where N},UndefInitializer})
    precompile(Tuple{Type{FixedSizeArray{Tuple{200,7},Float64,N,X,L} where L where X where N},UndefInitializer})
    precompile(Tuple{Type{FixedSizeArray{Tuple{200,8},Float64,N,X,L} where L where X where N},UndefInitializer})
    precompile(Tuple{Type{FixedSizeArray},Array{Float64,2}})
    precompile(Tuple{Type{PtrArray{Tuple{140},Float64,1,Tuple{1},140,V} where V},Ptr{Float64}})
    precompile(Tuple{typeof(Base.__cat),Array{Float64,3},Tuple{Int64,Int64,Int64},Tuple{Bool,Bool,Bool},DynamicPaddedArray{Float64,3},Vararg{Any,N} where N})
    precompile(Tuple{typeof(Base._unsafe_setindex!),IndexLinear,Array{Float64,3},DynamicPaddedArray{Float64,2},UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}})
    precompile(Tuple{typeof(Base._unsafe_setindex!),IndexLinear,Array{Float64,3},DynamicPaddedArray{Float64,3},UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}})
    precompile(Tuple{typeof(Base.cat_indices),DynamicPaddedArray{Float64,2},Int64})
    precompile(Tuple{typeof(Base.cat_indices),DynamicPaddedArray{Float64,3},Int64})
    precompile(Tuple{typeof(Base.cat_similar),DynamicPaddedArray{Float64,3},Type,Tuple{Int64,Int64,Int64}})
    precompile(Tuple{typeof(PaddedMatrices.K_unknown_At_mul_X_quote),Type,Type,Int64,Int64,Type,Int64,Bool,Symbol,Symbol,Symbol,Bool})
    precompile(Tuple{typeof(PaddedMatrices.generalized_getindex_quote),Core.SimpleVector,Core.SimpleVector,Type,Any,Bool,Bool})
    precompile(Tuple{typeof(PaddedMatrices.init_mutable_fs_padded_array_quote),Core.SimpleVector,Type})
    precompile(Tuple{typeof(PaddedMatrices.mulquote),Int64,Int64,Int64,Int64,Int64,Type{Float64},Symbol,Nothing,Int64})
    precompile(Tuple{typeof(PaddedMatrices.rand_iter_expr),Type,Int64,Int64,Expr,Int64,Int64})
    precompile(Tuple{typeof(PaddedMatrices.rand_mutable_fixed_size_expr),Int64,Type,Int64,Symbol,Int64,Int64,Symbol,Vararg{Symbol,N} where N})
    precompile(Tuple{typeof(PaddedMatrices.rand_mutable_fixed_size_expr),Int64,Type,Int64,Symbol,Int64})
    precompile(Tuple{typeof(PaddedMatrices.staticrangelength),Type{Static{(1, 7)}}})
    precompile(Tuple{typeof(copyto!),FixedSizeArray{Tuple{200,12},Float64,2,Tuple{1,200},2400},Array{Float64,2}})
    precompile(Tuple{typeof(copyto!),FixedSizeArray{Tuple{200,7},Float64,2,Tuple{1,200},1400},Array{Float64,2}})
    precompile(Tuple{typeof(copyto!),FixedSizeArray{Tuple{200,8},Float64,2,Tuple{1,200},1600},Array{Float64,2}})
    precompile(Tuple{typeof(map),typeof(Base.cat_size),Tuple{DynamicPaddedArray{Float64,3},DynamicPaddedArray{Float64,2},DynamicPaddedArray{Float64,3},DynamicPaddedArray{Float64,2}}})
end
